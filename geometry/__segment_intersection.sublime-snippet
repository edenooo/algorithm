<snippet>
	<content><![CDATA[
/*
	선분 교차 - 좌표 범위가 1e9를 넘어가면 ccw_sign을 수정해야 한다.
*/
int ccw_sign(ll ax, ll ay, ll bx, ll by, ll ox, ll oy) {
	ll val = (ax - ox)*(by - oy) - (bx - ox)*(ay - oy);
	if (val < 0) return -1;
	else if (val > 0) return 1;
	return 0;
}
bool isIntersect(ll ax, ll ay, ll bx, ll by, ll cx, ll cy, ll dx, ll dy) {
	int v1 = ccw_sign(bx, by, cx, cy, ax, ay);
	int v2 = ccw_sign(bx, by, dx, dy, ax, ay);
	int v3 = ccw_sign(dx, dy, ax, ay, cx, cy);
	int v4 = ccw_sign(dx, dy, bx, by, cx, cy);
	if (v1 == 0 && v2 == 0 && v3 == 0 && v4 == 0) { // 네 점이 한 직선 위에 있는 경우
		if (ax == bx && bx == cx && cx == dx) { // 네 점의 x좌표가 같은 경우
			swap(ax, ay); swap(bx, by); swap(cx, cy); swap(dx, dy);
		}
		vector<pair<ll, int> > v(4);
		v[0] = { ax, 0 }; v[1] = { bx, 0 }; v[2] = { cx, 1 }; v[3] = { dx, 1 };
		sort(v.begin(), v.end());
		if (v[0].second == v[1].second && v[1].first != v[2].first) return false;
		else return true;
	}
	return (v1 * v2 <= 0 && v3 * v4 <= 0);
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>__segment_intersection</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
