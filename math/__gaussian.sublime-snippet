<snippet>
	<content><![CDATA[
#define MOD 1000000007
ll pw(ll a, ll n)
{
	ll ret = 1;
	while(n)
	{
		if (n&1) ret=ret*a%MOD;
		a=a*a%MOD;
		n>>=1;
	}
	return ret;
}
ll inv(ll a)
{
	return pw(a, MOD-2);
}
vector<vector<ll> > Gaussian(vector<vector<ll> > A, vector<vector<ll> > B) {
	int N = A.size();
	assert(N == A[0].size());
	// 가우스 소거법
	for(int i=0; i<N; i++) {
		// 행 교환 연산
		if (A[i][i] == 0) {
			for(int j=i+1; j<N; j++) {
				if (A[j][i]) {
					for(int k=0; k<N; k++)
						swap(A[i][k], A[j][k]);
					swap(B[i][0], B[j][0]);
					break;
				}
			}
		}
		if (A[i][i] == 0) assert(0); // 아직 예외처리를 안 했다.

		for(int j=i+1; j<N; j++) {
			ll cnt = -A[j][i]*inv(A[i][i])%MOD;
			for(int k=0; k<N; k++) {
				A[j][k] += A[i][k] * cnt;
				A[j][k] %= MOD;
			}
			B[j][0] += B[i][0] * cnt;
			B[j][0] %= MOD;
		}
	}
	// 후위 대입법
	vector<vector<ll> > X = B;
	for(int i=N-1; i>=0; i--) {
		for(int j=i+1; j<N; j++) {
			X[i][0] -= A[i][j] * X[j][0];
			X[i][0] %= MOD;
		}
		X[i][0] *= inv(A[i][i]);
		X[i][0] %= MOD;
	}
	return X;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>__gaussian</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
